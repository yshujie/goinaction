package array_test

/**
✅ 题目：旋转数组（右旋转）
给定一个长度为 n 的数组 arr 和一个整数 k，将数组中的元素向右旋转 k 个位置（原地修改）。

示例
输入：[1, 2, 3, 4, 5, 6, 7], k = 3
输出：[5, 6, 7, 1, 2, 3, 4]

考点
	•	数组索引运算（取模）
	•	原地反转的三步法
	•	时间复杂度 O(n)、空间复杂度 O(1)
*/

/**
思考：
- 原地反转的三步法：整体反转、前半段反转、后半段反转
- 向右反转：将数组“前 k 个元素”搬到后面去
- 例如：原始数组 [1, 2, 3, 4, 5, 6, 7]
- 整体反转 [7,6,5,4,3,2,1]
- 前半段反转  [5,6,7,4,3,2,1]
- 后半段反转  [5,6,7,1,2,3,4]
*/

func RotatingRignt(a []int, k int) []int {
	if len(a) <= 1 {
		return a
	}
	if k < 0 {
		return RotatingLeft(a, -k)
	}

	// 对 k 取模，放置 index 越界问题
	k = k % len(a)

	//三步旋转法： 整体反转
	Reverse(a)
	Reverse(a[:k])
	Reverse(a[k:])

	return a
}
